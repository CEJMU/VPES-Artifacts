cmake_minimum_required(VERSION 3.10.0)
project(VPES-Artifacts)

include(FetchContent)

add_definitions(-w)

set(CMAKE_CXX_STANDARD 17 CACHE STRING "C++ Standard")
message(STATUS "CMAKE_CXX_STANDARD: ${CMAKE_CXX_STANDARD}")

FetchContent_Declare(systemc
    GIT_REPOSITORY https://github.com/accellera-official/systemc.git
    GIT_TAG 2.3.4
)

FetchContent_MakeAvailable(systemc)

FetchContent_Declare(systemc_ams
    URL https://www.coseda-tech.com/files/Files/Proof-of-Concepts/systemc-ams-2.3.4.tar.gz
)
FetchContent_MakeAvailable(systemc_ams)

target_include_directories(systemc-ams PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(systemc-ams PUBLIC ${systemc_ams_SOURCE_DIR})
target_include_directories(systemc-ams PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(impl_ac PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(impl_ac PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(core PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(core PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(conservative PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(conservative PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(eln PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(eln PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(impl_lsf PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(impl_lsf PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(impl_tdf PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(impl_tdf PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(linear PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(linear PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(solvertdf PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(solvertdf PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(user_solver PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(user_solver PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(sparse_library PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(sparse_library PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(synchronization PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(synchronization PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(data_types PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(data_types PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(reporting PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(reporting PUBLIC ${systemc_SOURCE_DIR}/src)
target_include_directories(tracing PUBLIC ${systemc_ams_SOURCE_DIR}/src)
target_include_directories(tracing PUBLIC ${systemc_SOURCE_DIR}/src)

add_subdirectory(callbacks)
add_subdirectory(clock_generator)
add_subdirectory(custom_fifo)
add_subdirectory(custom_signal)
add_subdirectory(custom_tlm)
add_subdirectory(datatypes)
add_subdirectory(delta_delay)
add_subdirectory(dynamic_processes)
add_subdirectory(event_finder)
add_subdirectory(feedback_loop)
add_subdirectory(fifo_example)
add_subdirectory(interfaces_ports)
add_subdirectory(kpn_artificial_deadlock)
add_subdirectory(kpn_example)
add_subdirectory(multiports)
add_subdirectory(mutex_example)
add_subdirectory(nb_fifo_example)
add_subdirectory(not_chain)
add_subdirectory(portarrays)
add_subdirectory(report)
add_subdirectory(sc_event_and_queue)
add_subdirectory(swapping_example)
add_subdirectory(thread_example)
add_subdirectory(tlm_at_1)
add_subdirectory(tlm_at_2)
add_subdirectory(tlm_at_3)
add_subdirectory(tlm_at_4)
add_subdirectory(tlm_at_backpressure)
add_subdirectory(tlm_cpu_example)
add_subdirectory(tlm_lt_debug_transport)
add_subdirectory(tlm_lt_dmi)
add_subdirectory(tlm_lt_initiator_interconnect_target)
add_subdirectory(tlm_lt_initiator_target)
add_subdirectory(tlm_memory_manager)
add_subdirectory(tlm_multipasstrough_sockets)
add_subdirectory(tlm_payload_extensions)
add_subdirectory(tlm_protocol_checker)
add_subdirectory(tlm_quantum_keeper)
add_subdirectory(tlm_simple_sockets)
add_subdirectory(ams-eln)
add_subdirectory(ams-eln2)
add_subdirectory(ams-tdf)
add_subdirectory(ams-tdf2)
add_subdirectory(ams-lsf)
add_subdirectory(ams-lsf2)